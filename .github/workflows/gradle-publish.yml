name: 打包推送到 MAVEN 仓库

on:
  release:
    types: [created]
  push:
    branches: [ main ]

jobs:
  build:
    # 使用 ubuntu 运行器
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    # 迁出仓库代码
    - uses: actions/checkout@v4

    # https://github.com/marketplace/actions/setup-java-jdk
    # 在 runner 上安装 jdk21
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        # settings-path: ${{ github.workspace }} # location for the settings.xml file
    # https://github.com/marketplace/actions/gradle-wrapper-validation
    # 由于我们要使用 gradle wrapper 方式安装 gradle ，所以只需要验证下就行了
    # 也可以不验证，这个只要自己确认没有问题就行
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v2

    # 执行构建命令
    - name: Build with Gradle
      run: ./gradlew build
      # 传递环境变量
      env:
        NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

    # 执行解密脚本，将 gpg 签名密钥解密为非加密的文件
    - name: Decrypt GPG file
      run: .github/decrypt_secret.sh
      env:
        # 从机密存储中将 解密的 密钥设置成环境变量
        LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

    # 执行发布命令
    - name: Publish to Maven
      # 注意这里，如果用 run: |  这样的语法写多行命令，会生成一个 sh 脚本再执行，会提示找不到 ./gradlew 命令
      # 所以这个问题我还不知道怎么解决，直接一行命令完成
      run: ./gradlew publishMavenJavaPublicationToReleaseRepository -Psigning.secretKeyRingFile="$HOME/secrets/secring.gpg" -Psigning.password="$SIGNING_PASSWORD" -Psigning.keyId="$SIGNING_KEYID"
      # 检查是否能正确获取到
      #run: ls -l $HOME/secrets/secring.gpg
      # 执行之前需要将 build.gradle 中的变量准备好，在这里添加成环境变量方式
      env:
        # 从机密中获取用户名和密码，然后设置成环境变量
        # 在 build.gradle 中就可以获取到了
        # https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_system_properties
        NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        SIGNING_KEYID: ${{ secrets.SIGNING_KEYID }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
